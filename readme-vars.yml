---

# project information
project_name: sickgear
project_url: "https://github.com/sickgear/sickgear"
project_logo: "https://raw.githubusercontent.com/wiki/SickGear/SickGear.Wiki/images/SickGearLogo.png"
project_blurb: |
  [SickGear]({{ project_url }}) provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more..

  For more information on SickGear visit their website and check it out: https://github.com/SickGear/SickGear
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}

# development version
development_versions: true
development_versions_items:
  - { tag: "latest", desc: "Stable SickGear releases" }
  - { tag: "develop", desc: "SickGear develop branch commits" }

# container parameters
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/data", desc: "Persistent config files." }
  - { vol_path: "/tv", vol_host_path: "/path/to/tv", desc: "where you store your tv shows" }
  - { vol_path: "/downloads", vol_host_path: "/path/to/downloads", desc: "your downloads folder for post processing (must not be download in progress)" }

param_usage_include_ports: true
param_ports:
  - { external_port: "8081", internal_port: "8081", port_desc: "will map the container's port 8081 to port 8081 on the host" }

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  ## Setting up the application

  Access the webui at `<your-ip>:8081`, for more information check out [SickGear]({{ project_url }}).

  ## Migration

  Non linuxserver.io containers are known to have the following configuration differences and may need SickGear or docker changes to migrate an existing setup

  * The post processing directory which is volume mounted as `downloads` within this container may be `incoming` in other versions.

  * The permissions environmental variables which are defined as `PGID` and `PUID` within this container may have been `APP_UID` and `APP_UID` in other versions.

  * The configuration file directory which is volume mounted as `config` within this container may be set as the environmental variable `APP_DATA` in other versions.

  * The cache directory which is set in `config.ini` may be configured as a fixed path `cache_dir = /data/cache`.
  Symptoms of this issue include port usage problems and a failure to start the web server log entries.
  Whilst the container is stopped alter this directive to `cache_dir = cache` which will allow SickGear to look for the folder relative to the volume mounted `/config` directory.

  It is recommended that a clean install be completed, rather than a migration, however if migration is necessary:

  * start a new instance of this image

  * compare and align SickGear version numbers between old and new. Ideally they should match but at a minimum the old version should be a lower version number to allow SickGear itself to try and migrate

  * stop both containers

  * notice the configuration difference and migrate copies of the old settings into the new app

  * start the new container and test

# changelog
changelogs:
  - { date: "25.06.24:", desc: "Rebase to Alpine 3.20." }
  - { date: "20.03.24:", desc: "Rebase to Alpine 3.19." }
  - { date: "08.10.23:", desc: "Install unrar from [linuxserver repo](https://github.com/linuxserver/docker-unrar)."}
  - { date: "10.08.23:", desc: "Bump unrar to 6.2.10."}
  - { date: "27.05.23:", desc: "Rebase develop to Alpine 3.18, deprecate armhf." }
  - { date: "05.03.23:", desc: "Rebase develop to Alpine 3.17." }
  - { date: "18.11.22:", desc: "Update service file from legacy SickBeard.py to sickgear.py." }
  - { date: "10.10.22:", desc: "Rebase develop branch to Alpine 3.16, migrate to s6v3, build unrar from source." }
  - { date: "31.01.21:", desc: "Add unrar." }
  - { date: "29.01.21:", desc: "Deprecate `UMASK_SET` in favor of UMASK in baseimage, see above for more information." }
  - { date: "23.01.21:", desc: "Rebasing to alpine 3.13." }
  - { date: "05.06.20:", desc: "Create `develop` tag to track the upstream `develop` branch commits." }
  - { date: "03.06.20:", desc: "Rebasing to alpine 3.12, switch to python3." }
  - { date: "19.12.19:", desc: "Rebasing to alpine 3.11." }
  - { date: "28.06.19:", desc: "Rebasing to alpine 3.10." }
  - { date: "23.03.19:", desc: "Switching to new Base images, shift to arm32v7 tag." }
  - { date: "22.02.19:", desc: "Rebasing to alpine 3.9." }
  - { date: "07.11.18:", desc: "Pipeline prep"}
  - { date: "07.07.18:", desc: "Initial draft release"}

